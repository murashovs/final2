---

- name: install builder
  hosts: localhost
  connection: local
 # become: yes
  gather_facts: False
  tasks:

    - name: associate subnet to the VPC
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        az: "{{ subnet_az }}"
        cidr: "{{ subnet_cidr }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        map_public: yes
        state: present
        resource_tags:
          project_name: "{{ project_name }}"
      register: subnet_1

    - name: create IGW
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        state: "present"
        tags:
          project_name: "{{ project_name }}"
      register: igw

    - name: Route IGW
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        subnets:
          - "{{ subnet_1.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id  }}"
        tags:
          project_name: "{{ project_name }}"


    - name: remove key pair by name
      ec2_key:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: "{{ project_name }}_ec2_keypair"
        region: "{{ region }}"
        state: absent

    - name: create a new ec2 key pair
      ec2_key:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: "{{ project_name }}_ec2_keypair"
        region: "{{ region }}"
      register: keypair

    - name: Copy EC2 Private Key
      copy: content="{{ keypair.key.private_key }}" dest={{ ec2_key_directory }}{{ code_name }}_ec2_keypair.pem
      when: keypair.changed == true

    - name: Create Security Group
      ec2_group:
        name: "{{ securitygroup_name }}"
        description: DMZ SG
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            ports:
              - 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
        tags:
          project_name: "{{ project_name }}"
      register: security_group

    - name: Create APP builder
      ec2:
        image: '{{ ami }}'
        wait: yes
        instance_type: '{{ instant_type }}'
        region: "{{ region }}"
        group_id: "{{ security_group.group_id }}"
        vpc_subnet_id: "{{ subnet_1.subnet.id }}"
        key_name: "{{ project_name }}_ec2_keypair"
        count_tag:
          Name: buikder
        instance_tags:
          project_name: "{{ project_name }}"
        exact_count: 1
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: ec21

        - name: Add Build instance to host group
          add_host:
            hostname: "{{ item.public_ip_address }}"
            groups: Builders
            ansible_ssh_user: ubuntu
            ansible_ssh_private_key_file: { { ec2_key_directory } }{ { code_name } }_ec2_keypair.pem
          with_items: "{{ ec21.instances }}"

    - name: Create webserver
      ec2:
        image: '{{ ami }}'
        wait: yes
        instance_type: '{{ instant_type }}'
        region: "{{ region }}"
        group_id: "{{ security_group.group_id }}"
        vpc_subnet_id: "{{ subnet_1.subnet.id }}"
        key_name: "{{ project_name }}_ec2_keypair"
        count_tag:
          Name: webserver
        instance_tags:
          project_name: "{{ project_name }}"
        exact_count: 1
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
      register: ec22

        - name: Add Build instance to host group
          add_host:
            hostname: "{{ item.public_ip_address }}"
            groups: web
            ansible_ssh_user: ubuntu
            ansible_ssh_private_key_file: { { ec2_key_directory } }{ { code_name } }_ec2_keypair.pem
          with_items: "{{ ec22.instances }}"

